// Block definition (there may be more than one block per file)
FUNCTION_BLOCK tipper

// Define input variables 
//Then input and output variable/s are defined (variable type is only REAL, integer is not implemented yet)
VAR_INPUT
  physical : REAL;
	bully : REAL;
	teasing : REAL;
	
END_VAR

// Define output variable
VAR_OUTPUT
    Severity : REAL;
END_VAR


//How each input variable is fuzzified is defined in FUZZIFY block. In each block 
//we define one or more TERMs (also called LinguisticTerms). Each term is composed by a name and a membership function.



FUZZIFY physical
    TERM Low := trape -0.3129 -0.1137 0.06053 0.1804;
	TERM Medium := trian 0.1343 0.2265 0.3187;
	TERM High := trape 0.2726 0.3833 0.6188 0.7521;
END_FUZZIFY

FUZZIFY bully
  TERM Low := trape -1.12 -0.515 -0.308 -0.0048;
  TERM Medium := trian -0.32 0.35 0.949;
  TERM High := trian 0.4 0.875 1.44;
END_FUZZIFY

FUZZIFY teasing
    TERM No := trape -4.59 -2.91 -0.5 0;
	TERM Yes := trape 0 0.5 2.76 4.44;
END_FUZZIFY


FUZZIFY Severity
  TERM Low := trian -0.4 0 0.4;
  TERM Medium := trian 0.3 0.5 0.7;
  TERM High := trian 0.6 1 1.4;
END_FUZZIFY




// Defzzzify output variable 'tip'
//Output variables are defuzzified to get a 'real' output number, 
//this is defined in DEFUZZIFY block. Like FUZZIFY block, 
//linguistic terms (or TERMs) are defined:
DEFUZZIFY Severity
    TERM Low := (0,0) (2.5,1) (2.5,1)(13,0);
    TERM Medium := (11,0) (14,1) (18,0);
    TERM High := (15,0) (20,1) (25,1) (30,0);
    // Use 'Center Of Gravity' defuzzification method
    METHOD : RM;
    // Default value is 0 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK No1
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;
    
RULE 19 : IF physical IS Low AND bully IS Low AND teasing IS No THEN Severity IS Medium;         
RULE 20 : IF physical IS Low AND bully IS Low AND teasing IS Yes THEN Severity IS Low;       
RULE 21 : IF physical IS Low AND bully IS Medium AND teasing IS No THEN Severity IS Medium;      
RULE 22 : IF physical IS Low AND bully IS Medium AND teasing IS Yes THEN Severity IS Low;        
RULE 23 : IF physical IS Low AND bully IS High AND teasing IS No THEN Severity IS Medium;        
RULE 24 : IF physical IS Low AND bully IS High AND teasing IS Yes THEN Severity IS Low;          
RULE 25 : IF physical IS Medium AND bully IS Low AND teasing IS Yes THEN Severity IS Medium;     
RULE 26 : IF physical IS Medium AND bully IS Medium AND teasing IS No THEN Severity IS High;     
RULE 27 : IF physical IS Medium AND bully IS Medium AND teasing IS Yes THEN Severity IS Medium;  
RULE 28 : IF physical IS Medium AND bully IS High AND teasing IS No THEN Severity IS High;       
RULE 29 : IF physical IS Medium AND bully IS High AND teasing IS Yes THEN Severity IS Medium;    
RULE 30 : IF physical IS Medium AND bully IS Low AND teasing IS No THEN Severity IS High;        
RULE 31 : IF physical IS High AND bully IS Low AND teasing IS No THEN Severity IS High;          
RULE 32 : IF physical IS High AND bully IS Low AND teasing IS Yes THEN Severity IS Medium;       
RULE 33 : IF physical IS High AND bully IS Medium AND teasing IS No THEN Severity IS High;       
RULE 34 : IF physical IS High AND bully IS Medium AND teasing IS Yes THEN Severity IS Medium;    
RULE 35 : IF physical IS High AND bully IS High AND teasing IS No THEN Severity IS High;         
RULE 36 : IF physical IS High AND bully IS High AND teasing IS Yes THEN Severity IS Medium;      


END_RULEBLOCK


END_FUNCTION_BLOCK
